Laurea in Ingegneria Informatica
Corso di Sistemi Operativi
Esercizi proposti per il laboratorio
 
Esercitazione di laboratorio numero 01
--------------------------------------

Esercizio 01
Gestione file e direttori
-------------------------

- Parte 01
Creare il seguente albero di directory nella propria home:

              soEx01
                 |
     ------------------------
     |           |          |
    src         bin       test
     |                      |
  ----------            -----------
  |        |            |         |
 include  lib         script   results

- Parte 02
Scaricare dalla pagina web il file
lab01e01in.txt
copiarlo nella directory src e quindi utilizzando tale direttorio
come direttorio corrente copiarlo nei direttori test, script
e results utilizzando solo path assoluti.
Verificare che i file creati esistano, e controllarne i diritti,
Utilizzare i comandi more, less e cat per verificarne il contenuto.
Sempre senza cambiare il direttorio corrente, cancellare tutti i
file creati utilizzando solo path relativi.
Ripetere la stessa sequenza di operazioni dal direttorio padre
di src, ovvero soEx01.

- Parte 03
Impartendo tutti i comandi dalla radice del proprio utente si
effettui quanto segue.
Copiare l'intero albero di direttori soEx01 in soEx01backup usando
il comando "cp" per file singoli e "mkdir" per i direttori.
Cancellare interamente soEx01 usando il comando "rm" per file
singoli e "rmdir" per i direttori.
Ripetere tanto l'operazione di copia quanto quella di cancellazione
utilizzando le versioni ricorsive dei comandi "cp" e "rm".



Esercizio 02
Gestione permessi
-----------------

Verificare:
- il proprio username e il gruppo di appartenenza.
  E' possibile modificarli?
- la disposizione della propria home all'interno della gerarchia del
  file system del sistema utilizzato.
- la struttura della home del sistema (e.g., quali sottodirettori
  possiede, dove si trovano le home dei colleghi di corso, etc.)
- i diritti di lettura e scrittura sui vari direttori. 
  E' possibile leggere e copiare file e direttori di altri utenti del
  sistema superandone le protezioni?
- verificare che cosa succede se si eliminano i diritti di lettura
  o di esecuzione a un direttorio.
  Come e' possibile modificare nello stesso modo i diritti di accesso a
  *tutti* i file e direttori di un albero di direttori (ad esempio
  eliminare il diritto di lettura a tutti, user, group, other, del
  direttorio soEx01backup)?
  Suggerimento: man chmod ... recursive ...



Esercizio 03
Editing di file
---------------

Usando un editor a scelta mediante "cut and paste" da questo file
si generi un file contenente la seguente tabella:

UID  PID PPID F    CPU PRI NI RSS  S  ADDR    TTY TIME    CMD
123   1  0    4000 0   31  0   568 Ss 6fd9cd4 ??  0:00.20 /sbin/launchd
125  10  1    4000 0   31  0  1292 R+ 6fd9384 ??  0:00.59 /usr/libexec/kextd
127  11  1    4000 0   31  0  3412 Z  6fd982c ??  0:02.10 /bin/ls

Si effettuino le seguenti operazioni:
1 - duplicare la seconda riga (quella con UID uguale a 125)
    copiandola in fondo alla tabella 3 volte
2 - cercare (automaticamente) tutte le sequenze "d9" nel testo
3 - sostituire (automaticamente) la cifra 0 con la lettera X
4 - cancellare le colonne F, TTY e CMD (per intero)
5 - duplicare la colonna ADDR inserendone la copia a sinistra
    due volte.

Osservazione:
In emacs la selezione verticale si ottiene con
ctrl-blank ... ctrl-x r k, ovvero control-x, rectangol kill
e si inserisce con
ctrl-x r y, ovvero con control-x rectangol yank.
E' possibile farlo con gli altri editor?



Esercizio 04
Programmi C e compilazione
--------------------------

- Parte 01
Scrivere un programma in linguaggio C che, utilizzando le primitive
di I/O ANSI C (fgetc/fputc, fscanf/fprint, fget/fputs a scelta), sia
in grado di copiare un file di testo in file identico.
Il nome due file sia ricevuto sulla riga di comando, in modo che
il programma possa essere eseguito mediante il comando:
nomeEseguibile fileSorgente fileDestinazione

- Parte 02
Compilare il file mediante gcc, eliminando eventuali warning.
Si provi la compilazione generando direttamente l'eseguibile oppure
prima il codice oggetto e poi l'eseguibile.

Si esegua il programma utilizzando il file lab01e01in.txt come file
di prova.
Si verifichi l'inserzione tra i parametri sia di path relativi sia
di path assoluti per la specifica dei file di I/O.
Verificare la corretta ri-copiatura del file (in un file identico)
mediante il comando di shell "diff".
Si utilizzi
man diff
per verificare il significato del comando diff. 

- Parte 03
Come si comporta il programma scritto se si cerca di copiare un
file binario?
Si utilizzi il file oggetto o il file eseguibile del programma
scritto per effettuare una verifica.

- Parte 04
Modificare il programma utilizzando
- le funzioni ANSI C fread e fwrite
e quindi
- le system call POSIX open, read, write e close.
Provarne il corretto funzionamento mediante diff.